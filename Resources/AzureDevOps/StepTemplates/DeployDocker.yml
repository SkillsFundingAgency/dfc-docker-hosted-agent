parameters:
  AksResourceGroup: ''
  AzureSubscriptionEndpoint: ''
  ImageBaseName: ''
  KubernetesCluster: ''
  ManifestFilename: ''
  AzurePatToken: ''
  Namespace: 'default'
  AzureDevOpsUrl: ''
  AgentPool: ''

steps:
#Create Namespace
- task: Kubernetes@1
  displayName: Create Name space
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
    azureResourceGroup: ${{ parameters.AksResourceGroup }}
    kubernetesCluster: ${{ parameters.KubernetesCluster }}
    useClusterAdmin: true
    command: apply
    useConfigurationFile: true
    inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "${{ parameters.Namespace }}" }}'


# Create PAT token secret
- task: Kubernetes@1
  displayName: kubectl create pat token secret
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
    azureResourceGroup: ${{ parameters.AksResourceGroup }}
    kubernetesCluster: ${{ parameters.KubernetesCluster }}
    useClusterAdmin: true
    namespace: '${{ parameters.Namespace }}'
    secretType: generic
    secretArguments: --from-literal=AZP_TOKEN=${{ parameters.AzurePatToken }}  --from-literal=AZP_URL=${{ parameters.AzureDevOpsUrl }} --from-literal=AZP_POOL=${{ parameters.AgentPool }} 
    secretName: azdevops

# Deploy the hosted docker agent docker image
- template: .\dfc-kubernetes-deploy.yml
  parameters:
    AksResourceGroup: ${{ parameters.AksResourceGroup }}
    AzureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
    KubernetesCluster: ${{ parameters.KubernetesCluster }}
    ManifestFileName: ${{ parameters.ManifestFilename }}
    PathToManifest: $(Pipeline.Workspace)/${{ parameters.ImageBaseName }}
    Namespace: ${{ parameters.Namespace }}
